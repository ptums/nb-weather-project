version: "3.8"

services:
  db:
    image: mariadb:10.6
    container_name: mariadb-prod
    restart: always
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - --init-file
      - /docker-entrypoint-initdb.d/init.sql
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 30

  prisma-migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: prisma-migrate
    env_file: .env
    environment:
      - DATABASE_URL=mysql://${DB_USER}:${DB_PASSWORD}@db:3306/${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
    command: npx prisma migrate deploy

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: node-api-prod
    restart: always
    env_file: .env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://${DB_USER}:${DB_PASSWORD}@db:3306/${DB_NAME}
    depends_on:
      - db

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: react-client-prod
    restart: always
    environment:
      - VITE_API_URL=/api

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - api
      - client

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email ${CERTBOT_EMAIL} -d ${DOMAIN} --agree-tos

volumes:
  mariadb_data:
